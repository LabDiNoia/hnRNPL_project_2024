actb_allSplice_dt # 5801 rows
actb_allSplice_dt[geneSymbol=="Dis3"]
#------------------------------------------------------------------------------#
#check numbers of up- and down-regulated genes
#make volcano plot with names written for some of the hits
library(data.table)
actb_norm_dt<-fread("../results/fcounts_deseq/normCounts.txt")
actb_norm_dt[,leg:=NULL]
actb_norm_dt[is.na(padj), leg:="0_unexpr"]
actb_norm_dt[padj<0.1 & log2FoldChange > log(1.5,2), leg:="2_upreg"] #1499
actb_norm_dt[padj<0.1 & log2FoldChange < (-log(1.5,2)), leg:="3_downreg"] #817
actb_norm_dt[is.na(leg), leg:="1_unchanged"]
actb_norm_dt[,gene_id_noVer:=sub("\\.[0-9]*","",gene_id)]
actb_norm_dt$leg<-factor(actb_norm_dt$leg,levels=c("1_unchanged","0_unexpr","2_upreg","3_downreg"))
actb_allSplice_dt[,gene_id_noVer:=sub("\\.[0-9]*","",GeneID)]
actb_allSplice_dt<-merge(actb_allSplice_dt, actb_norm_dt[padj<0.1,.(gene_id_noVer,expr_log2FC=log2FoldChange)], all.x=T)
actb_allSplice_dt<-rbind(actb_allSplice_dt[is.na(expr_log2FC)], actb_allSplice_dt[!is.na(expr_log2FC)])
actb_allSplice_dt[geneSymbol=="Dis3"]
actb_allSplice_dt
fread("../results/rMATS/A5SS.MATS.JCEC.txt")
a5ss_actb_dt<-fread("../results/rMATS/A5SS.MATS.JCEC.txt")
a5ss_actb_dt[geneSymbol=="Dis3"]
a5ss_actb_dt[geneSymbol=="Dis3" & FDR<0.1]
fread("../results/rMATS/SE.MATS.JCEC.txt")
fread("../results/rMATS/SE.MATS.JCEC.txt")[geneSymbol=="SE"]
fread("../results/rMATS/SE.MATS.JCEC.txt")[geneSymbol=="Dis3"]
# set 2
genes_to_plot<-c("Mfn1","Mfn2","Opa1","Dnm1l",
"Tfam","Ppargc1a")
temp_dt<-actb_norm_dt[gene_name %in% genes_to_plot]
temp_dt
forPlot_dt[,genotype:=sub("[0-9]","",sample)]
forPlot_dt<-melt(temp_dt, id.vars=c("gene_name","gene_id"),
measure.vars=c("WT1","WT2","WT3","KO1","KO2","KO3"),
variable.name = "sample", value.name = "expr")
forPlot_dt[,genotype:=sub("[0-9]","",sample)]
forPlot_dt$genotype<-factor(forPlot_dt$genotype, levels=c("WT","KO"))
forPlot_dt$gene_name<-factor(forPlot_dt$gene_name, levels=genes_to_plot)
max_y_val<-1.1*forPlot_dt[,max(expr)]
p1<-ggplot(forPlot_dt,aes(genotype, expr, fill=genotype))+
stat_summary(geom = "bar", fun = mean, width=1, position = "dodge")+
scale_fill_manual(values=c("#B9B8B8","#477FB7"))+
scale_x_discrete(expand = expansion(add = 1)) +
scale_y_continuous(expand=expansion(mult = c(0, 0.05)))+
geom_jitter(width=0.2, size=0.8, shape=16)+
facet_wrap(~gene_name, scales = "free_y", nrow=1)+
theme_classic()+
theme(text=element_text(family="sans"),
plot.title=element_text(size=8),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.ticks.x=element_blank(),
axis.title=element_text(size=7),
axis.text.y=element_text(size=5),
axis.text.x=element_blank(),
strip.background=element_rect(linewidth=0.25),
strip.text=element_text(size=7),
panel.border=element_rect(fill=NA,size=NA),
panel.spacing=unit(0.25,"line"))
#pdf("figures/rna_seq_indv_genes_expr.pdf",useDingbats=F,height=5,width=15)
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(0.45,"cm"),height=unit(2.5,"cm")))
require(ggplot2)
require(egg)
#pdf("figures/rna_seq_indv_genes_expr.pdf",useDingbats=F,height=5,width=15)
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(0.45,"cm"),height=unit(2.5,"cm")))
p1<-ggplot(forPlot_dt,aes(genotype, expr, fill=genotype))+
stat_summary(geom = "bar", fun = mean, width=1, position = "dodge")+
scale_fill_manual(values=c("#B9B8B8","#477FB7"))+
scale_x_discrete(expand = expansion(add = 1)) +
scale_y_continuous(expand=expansion(mult = c(0, 0.05)))+
geom_jitter(width=0.2, size=0.8, shape=16)+
facet_wrap(~gene_name, scales = "free_y", nrow=1)+
theme_classic()+
theme(text=element_text(family="sans"),
plot.title=element_text(size=8),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.ticks.x=element_blank(),
axis.title=element_text(size=7),
axis.text.y=element_text(size=5),
axis.text.x=element_blank(),
strip.background=element_rect(linewidth=0.25),
strip.text=element_text(size=7),
panel.border=element_rect(fill=NA,size=NA),
panel.spacing=unit(0.25,"line"))
#pdf("figures/rna_seq_indv_genes_expr.pdf",useDingbats=F,height=5,width=15)
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(0.45,"cm"),height=unit(2.5,"cm")))
actb_norm_dt[grep("Pparg",gene_name)]
actb_norm_dt[grep("Ppar",gene_name)]
# set 2
genes_to_plot<-c("Mfn1","Mfn2","Opa1","Dnm1l",
"Tfam","Ppargc1a","Ppargc1b",
"Cat","Sod1","Sod2","Gpx1",
"Ndusfs1","Ndusfs5","Uqcrc1","Cycs",
"Cox5b","Cox6c","Atp5e","Atp5b")
temp_dt<-actb_norm_dt[gene_name %in% genes_to_plot]
temp_dt
forPlot_dt<-melt(temp_dt, id.vars=c("gene_name","gene_id"),
measure.vars=c("WT1","WT2","WT3","KO1","KO2","KO3"),
variable.name = "sample", value.name = "expr")
forPlot_dt[,genotype:=sub("[0-9]","",sample)]
forPlot_dt$genotype<-factor(forPlot_dt$genotype, levels=c("WT","KO"))
forPlot_dt$gene_name<-factor(forPlot_dt$gene_name, levels=genes_to_plot)
max_y_val<-1.1*forPlot_dt[,max(expr)]
require(ggplot2)
require(egg)
p1<-ggplot(forPlot_dt,aes(genotype, expr, fill=genotype))+
stat_summary(geom = "bar", fun = mean, width=1, position = "dodge")+
scale_fill_manual(values=c("#B9B8B8","#477FB7"))+
scale_x_discrete(expand = expansion(add = 1)) +
scale_y_continuous(expand=expansion(mult = c(0, 0.05)))+
geom_jitter(width=0.2, size=0.8, shape=16)+
facet_wrap(~gene_name, scales = "free_y", nrow=1)+
theme_classic()+
theme(text=element_text(family="sans"),
plot.title=element_text(size=8),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.ticks.x=element_blank(),
axis.title=element_text(size=7),
axis.text.y=element_text(size=5),
axis.text.x=element_blank(),
strip.background=element_rect(linewidth=0.25),
strip.text=element_text(size=7),
panel.border=element_rect(fill=NA,size=NA),
panel.spacing=unit(0.25,"line"))
#pdf("figures/rna_seq_indv_genes_expr.pdf",useDingbats=F,height=5,width=15)
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(0.45,"cm"),height=unit(2.5,"cm")))
# set 2
genes_to_plot<-c("Mfn1","Mfn2","Opa1","Dnm1l",
"Tfam","Ppargc1a","Ppargc1b",
"Cat","Sod1","Sod2","Gpx1",
"Ndufs1","Ndufs1","Uqcrc1","Cycs",
"Cox5b","Cox6c","Atp5e","Atp5b")
temp_dt<-actb_norm_dt[gene_name %in% genes_to_plot]
forPlot_dt<-melt(temp_dt, id.vars=c("gene_name","gene_id"),
measure.vars=c("WT1","WT2","WT3","KO1","KO2","KO3"),
variable.name = "sample", value.name = "expr")
forPlot_dt[,genotype:=sub("[0-9]","",sample)]
forPlot_dt$genotype<-factor(forPlot_dt$genotype, levels=c("WT","KO"))
forPlot_dt$gene_name<-factor(forPlot_dt$gene_name, levels=genes_to_plot)
max_y_val<-1.1*forPlot_dt[,max(expr)]
require(ggplot2)
require(egg)
p1<-ggplot(forPlot_dt,aes(genotype, expr, fill=genotype))+
stat_summary(geom = "bar", fun = mean, width=1, position = "dodge")+
scale_fill_manual(values=c("#B9B8B8","#477FB7"))+
scale_x_discrete(expand = expansion(add = 1)) +
scale_y_continuous(expand=expansion(mult = c(0, 0.05)))+
geom_jitter(width=0.2, size=0.8, shape=16)+
facet_wrap(~gene_name, scales = "free_y", nrow=1)+
theme_classic()+
theme(text=element_text(family="sans"),
plot.title=element_text(size=8),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.ticks.x=element_blank(),
axis.title=element_text(size=7),
axis.text.y=element_text(size=5),
axis.text.x=element_blank(),
strip.background=element_rect(linewidth=0.25),
strip.text=element_text(size=7),
panel.border=element_rect(fill=NA,size=NA),
panel.spacing=unit(0.25,"line"))
#pdf("figures/rna_seq_indv_genes_expr.pdf",useDingbats=F,height=5,width=15)
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(0.45,"cm"),height=unit(2.5,"cm")))
# set 2
genes_to_plot<-c("Mfn1","Mfn2","Opa1","Dnm1l",
"Tfam","Ppargc1a","Ppargc1b",
"Cat","Sod1","Sod2","Gpx1",
"Ndufs1","Ndufs5","Uqcrc1","Cycs",
"Cox5b","Cox6c","Atp5e","Atp5b")
temp_dt<-actb_norm_dt[gene_name %in% genes_to_plot]
forPlot_dt<-melt(temp_dt, id.vars=c("gene_name","gene_id"),
measure.vars=c("WT1","WT2","WT3","KO1","KO2","KO3"),
variable.name = "sample", value.name = "expr")
forPlot_dt[,genotype:=sub("[0-9]","",sample)]
forPlot_dt$genotype<-factor(forPlot_dt$genotype, levels=c("WT","KO"))
forPlot_dt$gene_name<-factor(forPlot_dt$gene_name, levels=genes_to_plot)
max_y_val<-1.1*forPlot_dt[,max(expr)]
require(ggplot2)
require(egg)
p1<-ggplot(forPlot_dt,aes(genotype, expr, fill=genotype))+
stat_summary(geom = "bar", fun = mean, width=1, position = "dodge")+
scale_fill_manual(values=c("#B9B8B8","#477FB7"))+
scale_x_discrete(expand = expansion(add = 1)) +
scale_y_continuous(expand=expansion(mult = c(0, 0.05)))+
geom_jitter(width=0.2, size=0.8, shape=16)+
facet_wrap(~gene_name, scales = "free_y", nrow=1)+
theme_classic()+
theme(text=element_text(family="sans"),
plot.title=element_text(size=8),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.ticks.x=element_blank(),
axis.title=element_text(size=7),
axis.text.y=element_text(size=5),
axis.text.x=element_blank(),
strip.background=element_rect(linewidth=0.25),
strip.text=element_text(size=7),
panel.border=element_rect(fill=NA,size=NA),
panel.spacing=unit(0.25,"line"))
#pdf("figures/rna_seq_indv_genes_expr.pdf",useDingbats=F,height=5,width=15)
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(0.45,"cm"),height=unit(2.5,"cm")))
pdf("figures/rna_seq_indv_genes_expr_mitoch_set.pdf",useDingbats=F,height=5,width=15)
#pdf("figures/rna_seq_indv_genes_expr_mitoch_set.pdf",useDingbats=F,height=5,width=15)
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(0.45,"cm"),height=unit(2.5,"cm")))
dev.off()
actb_norm_dt[grep("Slc2a",gene_name)]
actb_norm_dt[grep("Slc2a",gene_name)][order(leg)]
temp_dt
temp_dt[order(leg)]
# compare 3'UTR lengths in up- and downregulated genes
library(rtracklayer)
library(data.table)
mouse_gtf<-import("../../../../../common/mm10/gencode.vM23.primary_assembly.annotation.gtf")
?threeUTRsByTranscript
library(GenomicRanges)
library(GenomicFeatures)
?threeUTRsByTranscript
mouse_gtf
mouse_txdb<-makeTxDbFromGRanges(mouse_gtf)
mouse_txdb
threeUTRsByTranscript(mouse_txdb)
threeUTRsByTranscript(mouse_txdb, use.names=T)
threeUTRs<-threeUTRsByTranscript(mouse_txdb, use.names=T)
width(ranges(threeUTRs))
as.data.frame( width(ranges(threeUTRs)) )
threeUTR_lengths<-as.data.frame( width(ranges(threeUTRs)) )
threeUTR_lengths<-as.data.frame( width(ranges(threeUTRs)) )
threeUTR_lengths
library(dplyr)
the_lengths %>% group_by(group, group_name) %>% summarise(sum(value))
threeUTR_lengths %>% group_by(group, group_name) %>% summarise(sum(value))
threeUTR_lengths
threeUTR_lengths<-as.data.table( width(ranges(threeUTRs)) )
threeUTR_lengths
threeUTR_lengths[,sum(value),by=group_name]
threeUTR_lengths %>% group_by(group, group_name) %>% summarise(sum(value))
threeUTR_lengths[,sum(value),by=group_name]
threeUTR_lengths[,UTR3_length=sum(value),by=group_name]
threeUTR_lengths[,.(UTR3_length=sum(value)),by=group_name]
threeUTR_lengths
threeUTR_lengths<-threeUTR_lengths[,.(UTR3_length=sum(value)),by=group_name]
threeUTR_lengths
as.data.table(mouse_gtf)
as.data.table(mouse_gtf)[,.(gene_id,transcript_id)]
unique(as.data.table(mouse_gtf)[,.(gene_id,transcript_id)])
unique(as.data.table(mouse_gtf)[!is.na(transcript_id),.(gene_id,transcript_id)])
gene_tx_id_lookUp<-unique(as.data.table(mouse_gtf)[!is.na(transcript_id),.(gene_id,transcript_id)])
gene_tx_id_lookUp<-unique(as.data.table(mouse_gtf)[!is.na(transcript_id),.(gene_id,transcript_id,gene_type)])
gene_tx_id_lookUp
gene_tx_id_lookUp[,.N,gene_type]
merge(threeUTR_lengths,gene_tx_id_lookUp,all.y=F)
colnames(threeUTR_lengths)[1]<-"transcript_id"
merge(threeUTR_lengths,gene_tx_id_lookUp,by=,all.y=F)
threeUTR_lengths
threeUTR_lengths<-merge(threeUTR_lengths, gene_tx_id_lookUp, all.x=T, all.y=F)
threeUTR_lengths
threeUTR_lengths
threeUTR_lengths[,.N,by=transcript_id]
threeUTR_lengths[,.N,by=transcript_id][order(N)]
threeUTR_lengths[,.N,by=gene_id][order(N)]
?range
threeUTR_lengths[,range(UTR3_length),by=gene_id]
threeUTR_lengths[,max(UTR3_length)-min(UTR3_length),by=gene_id]
threeUTR_lengths[,max(UTR3_length)-min(UTR3_length),by=gene_id][V1!=0]
threeUTR_lengths[,.N,by=gene_type]
actb_norm_dt
actb_norm_dt[]
actb_norm_dt[leg=="2_upreg"]
actb_norm_dt[leg=="2_upreg", gene_id]
threeUTR_lengths[gene_id %in% actb_norm_dt[leg=="2_upreg", gene_id]]
threeUTR_lengths[gene_id %in% actb_norm_dt[leg=="2_upreg", gene_id]][, .N, by=gene_type]
threeUTR_lengths[gene_id %in% actb_norm_dt[leg=="1_unchanged", gene_id]][, .N, by=gene_type]
threeUTR_lengths[gene_id %in% actb_norm_dt[leg=="3_downreg", gene_id]][, .N, by=gene_type]
threeUTR_lengths[,.N,by=gene_type] # no lncRNAs here. a couple of polymorphic_pseudogene
threeUTR_lengths[gene_id %in% actb_norm_dt[leg=="2_upreg", gene_id], UTR3_length]
threeUTR_lengths[gene_id %in% actb_norm_dt[leg=="3_downreg", gene_id], UTR3_length]
threeUTR_lengths[gene_id %in% actb_norm_dt[leg=="1_unchanged", gene_id], UTR3_length]
summary(threeUTR_lengths[gene_id %in% actb_norm_dt[leg=="2_upreg", gene_id], UTR3_length])
summary(threeUTR_lengths[gene_id %in% actb_norm_dt[leg=="3_downreg", gene_id], UTR3_length])
summary(threeUTR_lengths[gene_id %in% actb_norm_dt[leg=="1_unchanged", gene_id], UTR3_length])
threeUTR_lengths
threeUTR_lengths[gene_type!="protein_coding"]
merge(threeUTR_lengths,actb_norm_dt[,.(gene_id,leg)])
threeUTR_lengths
actb_norm_dt[,.(gene_id,leg)]
merge(threeUTR_lengths,actb_norm_dt[,.(gene_id,leg)],by=gene_id)
merge(threeUTR_lengths,actb_norm_dt[,.(gene_id,leg)],by="gene_id")
merge(threeUTR_lengths, actb_norm_dt[,.(gene_id,leg)], by="gene_id", all.x=T, all.y=T)
threeUTR_lengths<-merge(threeUTR_lengths, actb_norm_dt[,.(gene_id,leg)], by="gene_id", all.x=T, all.y=F)
threeUTR_lengths
threeUTR_lengths[,.N,by=leg]
unique(threeUTR_lengths[,.(gene_id,leg)])[,.N,by=leg]
ggplot(threeUTR_lengths,aes(x=leg, y=UTR3_length))+geom_violin()
ggplot(threeUTR_lengths,aes(x=leg, y=UTR3_length))+geom_violin()+scale_y_continuous(trans = "log")
ggplot(threeUTR_lengths,aes(x=leg, y=UTR3_length))+geom_violin()+scale_y_continuous(trans = "log2")
ggplot(threeUTR_lengths,aes(x=leg, y=UTR3_length))+geom_violin()+scale_y_continuous(trans = "log10")
ggplot(threeUTR_lengths,aes(x=leg, y=UTR3_length))+geom_violin()+scale_y_continuous(trans = "log10")+geom_boxplot()
threeUTR_lengths[,mean(UTR3_length),leg]
threeUTR_lengths[,mean(UTR3_length), by=leg]
threeUTR_lengths[,summary(UTR3_length), by=leg]
threeUTR_lengths[gene_type=="protein_coding"]
threeUTR_lengths<-threeUTR_lengths[gene_type=="protein_coding"]
threeUTR_lengths[,.N,by=leg]
unique(threeUTR_lengths[,.(gene_id,leg)])[,.N,by=leg]
threeUTR_lengths[,mean(UTR3_length), by=leg]
threeUTR_lengths[, mean(UTR3_length), by=leg]
ggplot(threeUTR_lengths,aes(x=UTR3_length, color=leg))+geom_density()+scale_x_continuous(trans = "log10")
ggplot(threeUTR_lengths,aes(x=leg, y=UTR3_length))+geom_violin()+scale_y_continuous(trans = "log10")
ggplot(threeUTR_lengths,aes(x=leg, y=UTR3_length))+geom_violin()+scale_y_continuous(trans = "log10")+geom_boxplot()
ggplot(threeUTR_lengths,aes(x=leg, y=UTR3_length))+geom_violin()+scale_y_continuous(trans = "log10")
ggplot(threeUTR_lengths,aes(x=UTR3_length, color=leg))+geom_density()+scale_x_continuous(trans = "log10")
ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=UTR3_length, color=leg))+geom_density()+scale_x_continuous(trans = "log10")
ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=UTR3_length, color=leg))+geom_density()+scale_x_continuous(trans = "log10")+theme_classic()
ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin()+
scale_y_continuous(trans = "log10")
ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=UTR3_length, color=leg))+
geom_density()+
scale_x_continuous(trans = "log10")+
theme_classic()
library(egg)
ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin()+
scale_color_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()
ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin()+
scale_fill_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()
ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin(aes(fill=leg))+
scale_fill_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()
ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=UTR3_length, color=leg))+
geom_density()+
scale_color_manual(values=c("grey","red","blue"))+
scale_x_continuous(trans = "log10")+
theme_classic()
ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin(aes(fill=leg))+
scale_fill_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()+
theme(text=element_text(family="sans"),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.title=element_text(size=7),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6))
p1<-ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin(aes(fill=leg))+
scale_fill_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()+
theme(text=element_text(family="sans"),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.title=element_text(size=7),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6))
#p1
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(4,"cm"),height=unit(3,"cm")))
#p1
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(2.5,"cm"),height=unit(2.5,"cm")))
#p1
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(3,"cm"),height=unit(2.5,"cm")))
#p1
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(1.5,"cm"),height=unit(2.5,"cm")))
p1<-ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin(aes(fill=leg,color=NA))+
scale_fill_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()+
theme(text=element_text(family="sans"),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.title=element_text(size=7),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6))
#p1
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(1.5,"cm"),height=unit(2.5,"cm")))
p1<-ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin(aes(fill=leg), color=NA)+
scale_fill_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()+
theme(text=element_text(family="sans"),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.title=element_text(size=7),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6))
#p1
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(1.5,"cm"),height=unit(2.5,"cm")))
p1<-ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin(aes(fill=leg))+
scale_fill_manual(values=c("grey","red","blue"))+
scale_color_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()+
theme(text=element_text(family="sans"),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.title=element_text(size=7),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6))
#p1
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(1.5,"cm"),height=unit(2.5,"cm")))
p1<-ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin(aes(fill=leg,color=leg))+
scale_fill_manual(values=c("grey","red","blue"))+
scale_color_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()+
theme(text=element_text(family="sans"),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.title=element_text(size=7),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6))
#p1
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(1.5,"cm"),height=unit(2.5,"cm")))
p1<-ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin(aes(fill=leg,color=leg), width=0.9)+
scale_fill_manual(values=c("grey","red","blue"))+
scale_color_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()+
theme(text=element_text(family="sans"),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.title=element_text(size=7),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6))
#p1
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(1.5,"cm"),height=unit(2.5,"cm")))
p1<-ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin(aes(fill=leg,color=leg), width=0.8)+
scale_fill_manual(values=c("grey","red","blue"))+
scale_color_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()+
theme(text=element_text(family="sans"),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.title=element_text(size=7),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6))
#p1
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(1.5,"cm"),height=unit(2.5,"cm")))
ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=UTR3_length, color=leg))+
geom_density()+
scale_color_manual(values=c("grey","red","blue"))+
scale_x_continuous(trans = "log10")+
theme_classic()+
theme(text=element_text(family="sans"),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.title=element_text(size=7),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6))
p1<-ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=UTR3_length, color=leg))+
geom_density()+
scale_color_manual(values=c("grey","red","blue"))+
scale_x_continuous(trans = "log10")+
theme_classic()+
theme(text=element_text(family="sans"),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.title=element_text(size=7),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6))
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(1.5,"cm"),height=unit(2.5,"cm")))
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(2.5,"cm"),height=unit(2.5,"cm")))
getwd()
pdf("figures/3pUTR_length_densityPlot.pdf",useDingbats=F,height=5,width=15)
#pdf("figures/3pUTR_length_densityPlot.pdf",useDingbats=F,height=5,width=15)
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(2.5,"cm"),height=unit(2.5,"cm")))
dev.off()
pdf("figures/3pUTR_lengths_violinPlot.pdf",useDingbats=F,height=5,width=15)
#pdf("figures/3pUTR_lengths_violinPlot.pdf",useDingbats=F,height=5,width=15)
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(1.5,"cm"),height=unit(2.5,"cm")))
dev.off()
p1<-ggplot(threeUTR_lengths[leg!="0_unexpr"],aes(x=leg, y=UTR3_length))+
geom_violin(aes(fill=leg,color=leg), width=0.8)+
scale_fill_manual(values=c("grey","red","blue"))+
scale_color_manual(values=c("grey","red","blue"))+
scale_y_continuous(trans = "log10")+
theme_classic()+
theme(text=element_text(family="sans"),
axis.line=element_line(color='black',linewidth=0.125),
axis.ticks=element_line(colour="black",linewidth = 0.125),
axis.title=element_text(size=7),
axis.text.y=element_text(size=6),
axis.text.x=element_text(size=6))
pdf("figures/3pUTR_lengths_violinPlot.pdf",useDingbats=F,height=5,width=15)
#pdf("figures/3pUTR_lengths_violinPlot.pdf",useDingbats=F,height=5,width=15)
grid.arrange(grobs=lapply(list(p1),set_panel_size,width=unit(1.5,"cm"),height=unit(2.5,"cm")))
dev.off()
threeUTR_lengths
merge(threeUTR_lengths,actb_norm_dt[,.(gene_id,gene_name)]
)
merge(threeUTR_lengths,actb_norm_dt[,.(gene_id,gene_name)], all.x=T, all.y=F)
threeUTR_lengths<-merge(threeUTR_lengths,actb_norm_dt[,.(gene_id,gene_name)], all.x=T, all.y=F)
write.table(threeUTR_lengths,"figures/3pUTR_lengths.txt", sep="\t", quote=F, row.names=F)
dir.create("infoTables")
